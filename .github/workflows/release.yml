name: Release NPM project

on:
  create:
    branches:
      - release/*
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Authenticate with private NPM package
        run: echo "pallassystems:registry=https://npm.pkg.github.com/PallasSystems//npm.pkg.github.com/:_authToken=${{ secrets.SCM_TOKEN }}" > ~/.npmrc

      - name: Extract branch name
        id: extract_branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / - | sed 's/release-*//')" >> $GITHUB_ENV

      - name: Setup Git Email
        run: git config --global user.email "pallas-ci@pallas.uk"
      - name: Setup Git User
        run: git config --global user.name "GitHub Action"
      - name: Setup GPG Autosign
        run: git config --global commit.gpgsign false
      - name: Setup GPG Autosign Key
        run: git config --global user.signingkey ${{ secrets.GPG_PRIVATE_KEYNAME }}

      - name: Run NPM Install
        run: npm ci
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}

      - name: Run NPM Build
        run: npm run build --if-present

      - name: Publish package on NPM ðŸ“¦
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.SCM_TOKEN }}

      - name: Run NPM Test
        run: npm run test
        continue-on-error: true

      - name: Save Code Linting Report JSON
        run: npm run lint:report
        continue-on-error: true

      - name: Upload ESLint report
        uses: actions/upload-artifact@v2
        with:
          name: eslint_report.json
          path: ${GITHUB_WORKSPACE}/eslint_report.json

      - name: Upload StyleLint report
        uses: actions/upload-artifact@v2
        with:
          name: stylelint_report.txt
          path: ${GITHUB_WORKSPACE}/stylelint_report.txt

      # Automatic Scanner is enabled
      - name: SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Fetch all Branches
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git fetch --all

      - name: Switch to main branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git checkout main

      - name: Merge release banch into main
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git merge origin/release/${{ env.BRANCH_NAME }}

      - name: Merge release banch into main
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git push origin main
